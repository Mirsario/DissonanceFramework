function void ColorMask(uint index,byte r,byte g,byte b,byte a) : glColorMaski;

function void GetBoolean(uint target,uint index,IntPtr data) : glGetBooleani_v;

function void GetInteger(uint target,uint index,ref int data) : glGetIntegeri_v;

function IntPtr GetStringPtr(uint name,uint index) : glGetStringi;

function void Enable(uint target,uint index) : glEnablei;

function void Disable(uint target,uint index) : glDisablei;

function byte IsEnabled(uint target,uint index) : glIsEnabledi;

function void BeginTransformFeedback(uint primitiveMode) : glBeginTransformFeedback;

function void EndTransformFeedback() : glEndTransformFeedback;

function void BindBufferRange(BufferRangeTarget target,uint index,uint buffer,int offset,int size) : glBindBufferRange;

function void BindBufferBase(BufferRangeTarget target,uint index,uint buffer) : glBindBufferBase;

function void TransformFeedbackVaryings(uint program,int count,IntPtr varyings,uint bufferMode) : glTransformFeedbackVaryings;

function void GetTransformFeedbackVarying(uint program,uint index,int bufSize,ref int length,ref int size,ref uint type,IntPtr name) : glGetTransformFeedbackVarying;

function void ClampColor(uint target,uint clamp) : glClampColor;

function void BeginConditionalRender(uint id,uint mode) : glBeginConditionalRender;

function void EndConditionalRender() : glEndConditionalRender;

function void VertexAttribIPointer(uint index,int size,uint type,int stride,IntPtr pointer) : glVertexAttribIPointer;

function void GetVertexAttribI(uint index,uint pName,ref int parameters) : glGetVertexAttribIiv;

function void GetVertexAttribI(uint index,uint pName,ref uint parameters) : glGetVertexAttribIuiv;

function void VertexAttribI1(uint index,int x) : glVertexAttribI1i;

function void VertexAttribI2(uint index,int x,int y) : glVertexAttribI2i;

function void VertexAttribI3(uint index,int x,int y,int z) : glVertexAttribI3i;

function void VertexAttribI4(uint index,int x,int y,int z,int w) : glVertexAttribI4i;

function void VertexAttribI1(uint index,uint x) : glVertexAttribI1ui;

function void VertexAttribI2(uint index,uint x,uint y) : glVertexAttribI2ui;

function void VertexAttribI3(uint index,uint x,uint y,uint z) : glVertexAttribI3ui;

function void VertexAttribI4(uint index,uint x,uint y,uint z,uint w) : glVertexAttribI4ui;

function void VertexAttribI1(uint index,ref int v) : glVertexAttribI1iv;

function void VertexAttribI2(uint index,ref int v) : glVertexAttribI2iv;

function void VertexAttribI3(uint index,ref int v) : glVertexAttribI3iv;

function void VertexAttribI4(uint index,ref int v) : glVertexAttribI4iv;

function void VertexAttribI1(uint index,ref uint v) : glVertexAttribI1uiv;

function void VertexAttribI2(uint index,ref uint v) : glVertexAttribI2uiv;

function void VertexAttribI3(uint index,ref uint v) : glVertexAttribI3uiv;

function void VertexAttribI4(uint index,ref uint v) : glVertexAttribI4uiv;

function void VertexAttribI4(uint index,sbyte[] v) : glVertexAttribI4bv;

function void VertexAttribI4(uint index,ref short v) : glVertexAttribI4sv;

function void VertexAttribI4(uint index,byte[] v) : glVertexAttribI4ubv;

function void VertexAttribI4(uint index,ref ushort v) : glVertexAttribI4usv;

function void GetUniform(uint program,int location,ref uint parameters) : glGetUniformuiv;

function void BindFragDataLocation(uint program,uint color,IntPtr name) : glBindFragDataLocation;

function int GetFragDataLocation(uint program,IntPtr name) : glGetFragDataLocation;

function void Uniform1(int location,uint v0) : glUniform1ui;

function void Uniform2(int location,uint v0,uint v1) : glUniform2ui;

function void Uniform3(int location,uint v0,uint v1,uint v2) : glUniform3ui;

function void Uniform4(int location,uint v0,uint v1,uint v2,uint v3) : glUniform4ui;

function void Uniform1(int location,int count,ref uint value) : glUniform1uiv;

function void Uniform2(int location,int count,ref uint value) : glUniform2uiv;

function void Uniform3(int location,int count,ref uint value) : glUniform3uiv;

function void Uniform4(int location,int count,ref uint value) : glUniform4uiv;

function void TexParameterI(TextureTarget target,uint pName,ref int parameters) : glTexParameterIiv;

function void TexParameterI(TextureTarget target,uint pName,ref uint parameters) : glTexParameterIuiv;

function void GetTexParameterI(TextureTarget target,GetTextureParameter parameterName,ref int parameters) : glGetTexParameterIiv;

function void GetTexParameterI(TextureTarget target,GetTextureParameter parameterName,ref uint parameters) : glGetTexParameterIuiv;

function void ClearBuffer(uint buffer,int drawbuffer,ref int value) : glClearBufferiv;

function void ClearBuffer(uint buffer,int drawbuffer,ref uint value) : glClearBufferuiv;

function void ClearBuffer(uint buffer,int drawbuffer,ref float value) : glClearBufferfv;

function void ClearBuffer(uint buffer,int drawbuffer,float depth,int stencil) : glClearBufferfi;

function byte IsRenderbuffer(uint renderbuffer) : glIsRenderbuffer;

function void BindRenderbuffer(RenderbufferTarget target,uint renderbuffer) : glBindRenderbuffer;

function void DeleteRenderbuffers(int numRenderbuffers,uint* renderbuffers) : glDeleteRenderbuffers;

function void GenRenderbuffers(int numRenderbuffers,uint* renderbuffers) : glGenRenderbuffers;

function void RenderbufferStorage(RenderbufferTarget target,RenderbufferStorage internalFormat,int width,int height) : glRenderbufferStorage;

function void GetRenderbufferParameter(uint target,uint pName,ref int parameters) : glGetRenderbufferParameteriv;

function byte IsFramebuffer(uint framebuffer) : glIsFramebuffer;

function void BindFramebuffer(FramebufferTarget target,uint framebuffer) : glBindFramebuffer;

function void DeleteFramebuffers(int n,[Out] uint* framebuffers) : glDeleteFramebuffers;

function void GenFramebuffers(int numFramebuffers,[Out] uint* framebuffers) : glGenFramebuffers;

function FramebufferStatus CheckFramebufferStatus(FramebufferTarget target) : glCheckFramebufferStatus;

function void FramebufferTexture1D(FramebufferTarget target,FramebufferAttachment attachment,TextureTarget texTarget,uint texture,int level) : glFramebufferTexture1D;

function void FramebufferTexture2D(FramebufferTarget target,FramebufferAttachment attachment,TextureTarget texTarget,uint texture,int level) : glFramebufferTexture2D;

function void FramebufferTexture3D(FramebufferTarget target,FramebufferAttachment attachment,TextureTarget texTarget,uint texture,int level,int zOffset) : glFramebufferTexture3D;

function void FramebufferRenderbuffer(FramebufferTarget target,FramebufferAttachment attachment,RenderbufferTarget renderbuffertarget,uint renderbuffer) : glFramebufferRenderbuffer;

function void GetFramebufferAttachmentParameter(FramebufferTarget target,FramebufferAttachment attachment,uint pName,ref int parameters) : glGetFramebufferAttachmentParameteriv;

function void GenerateMipmap(GenerateMipmapTarget target) : glGenerateMipmap;

function void BlitFramebuffer(int srcX0,int srcY0,int srcX1,int srcY1,int dstX0,int dstY0,int dstX1,int dstY1,ClearBufferMask mask,BlitFramebufferFilter filter) : glBlitFramebuffer;

function void RenderbufferStorageMultisample(uint target,int samples,uint internalFormat,int width,int height) : glRenderbufferStorageMultisample;

function void FramebufferTextureLayer(FramebufferTarget target,FramebufferAttachment attachment,uint texture,int level,int layer) : glFramebufferTextureLayer;

function IntPtr MapBufferRange(BufferTarget target,int offset,int length,uint access) : glMapBufferRange;

function void FlushMappedBufferRange(BufferTarget target,int offset,int length) : glFlushMappedBufferRange;

function void BindVertexArray(uint array) : glBindVertexArray;

function unsafe void DeleteVertexArrays(int numArrays,uint* arrays) : glDeleteVertexArrays;

function unsafe void GenVertexArrays(int numArrays,uint* arrays) : glGenVertexArrays;

function byte IsVertexArray(uint array) : glIsVertexArray;
